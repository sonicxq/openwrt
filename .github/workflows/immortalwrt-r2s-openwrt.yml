name: NanoPi R2S ImmortalWrt

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  ImmortalWrt-18_06:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo -E apt-get update -y
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y nstall build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
    - name: Clone Source
      run: |
        cd "/home/runner"
        git clone "https://github.com/sonicxq/lede.git" "immortalwrt"
        sudo chown -R runner:runner "immortalwrt"
        cd "/home/runner/immortalwrt"
        cd "/home/runner/immortalwrt/package/lean/"
        git clone https://github.com/jerrykuku/lua-maxminddb.git
        git clone https://github.com/jerrykuku/luci-app-vssr.git 
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    - name: Build ImmortalWrt-18.06
      run: |
        cd "/home/runner/immortalwrt"
        cp -f "${GITHUB_WORKSPACE}/configs/1806-config.seed" ".config"
        make defconfig
        make -j$[$(nproc)+1]
        mv -f "bin/targets/rockchip/armv8/openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz" "../openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz"
        mv -f "bin/targets/rockchip/armv8/openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz" "../openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz"
    - name: Rebuild ImmortalWrt-18.06 to Collect Error Log
      if: failure()
      run: |
        cd "/home/runner/immortalwrt"
        make -j1 V=s
        mv -f "bin/targets/rockchip/armv8/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz" "../immortalwrt-18.06-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz"
        mv -f "bin/targets/rockchip/armv8/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz" "../immortalwrt-18.06-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz"
        mv -f "bin/targets/rockchip/armv8/sha256sums" "../immortalwrt-18.06-sha256sums"
    - name: Upload ImmortalWrt-18.06 SHA256SUM Hash
      uses: actions/upload-artifact@v2
      with:
        name: immortalwrt-18.06-sha256sums
        path: /home/runner/immortalwrt-18.06-sha256sums
    - name: Upload ImmortalWrt-18.06 EXT4 Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz
        path: /home/runner/openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz
    - name: Upload ImmortalWrt-18.06 SquashFS Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz
        path: /home/runner/openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz
    - name: Upload ImmortalWrt-18.06 Firmwares to Cloud
      timeout-minutes: 30
      run: |
        cd "/home/runner"
        zip -j "openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-sysupgrade.zip" "openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz" "openwrt-rockchip-armv8-friendlyarm_nanopi-r2s-squashfs-sysupgrade.img.gz"
        ${GITHUB_WORKSPACE}/scripts/upload_firmware.py  --device-name "FriendlyARM NanoPi R2S" --device-file "rockchip-armv8-friendlyarm_nanopi-r2s" --immortalwrt-version "18.06" --kernel-version "5.4" --api-id "${{ secrets.TELEGRAM_API_ID }}" --api-hash "${{ secrets.TELEGRAM_API_HASH }}" --bot-token "${{ secrets.TELEGRAM_BOT_TOKEN }}" || exit 0
